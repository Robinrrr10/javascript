JAVASCRIPT TUTORIALS:
--------------------
https://www.youtube.com/playlist?list=PLsyeobzWxl7qtP8Lo9TReqUMkiOp446cV

node js is used for backend
react js is used for frontend
react js is used for web and mobile application
react native is used for android and ios application
angular js is used for mvc model. used for single page application
electron js used to build cross platform for desktop applications(build with javascript, html and css)
react vr used to create virtual reality applications
tensorflow js used for machine learning framework



JAVASCRIPT with UI
------------------
------------------


HTML, CSS, JAVASCRIPT

Document Object Model (DOM)

Element node - different html tags
Attribute node - different attribute in each tag
Text node - text which is needs to display

Eg:
<div id="mypage">How are you</div>

here div is element node
id is attribute node
"How are you" is text node



visual stdio and chrome is enough for learning

To add javascript code, we can use <script> tag in html  
We can directly write code inside <script> tag or else we can call .js file in script

<script type="text/javascript">  // default it will take text/javascript only. but it is better to mension type

</script>

Eg:
<script type="text/javascript">
	document.write("Hollo world")
</script>

document is the object of entire html
write() is the inbuild method of document

document.write("<h1>Hollo world<h1>")



We can write <script> tag in any where in html
if it has more lines of javascript code better add at end of the html file. this will improve performance


To include .js external file, use src attribute inside script tag then give name of the file
<script src="myfile.js" type="text/javascript">

</script>


; semicolon is used to seperate the statement

single line command should be in double slash // then command
multi line command should be in /* multiple lines */

//use live server extension in visual studio. we no need to reload the browser. just click live, it will reload automatically'



Data type in javascripts:
---------------
1. primitive datatypes
2. trivial/other  datatypes
3. Composite datatypes

Primitive datatypes:
--
Number
String
Boolean

Trivial / other datatypes:
-------
null
undefined

Composite datatypes:
-----------
Objects
Arrays



Javascript is loosely typed programming language
Javascript is dynamically typed scripting language



var num = 34;
var name = "Ram";
var isName = true;

var x; //declaration
x = 12; //initialization

variable name should not be predefined keyword
variable name can start with letter, underscore _ or dollor $
case sensitive

even we dont give var keyword, it will still work
Eg: num = 78     //but this will be global variable

to show alert message in browser
alert("message");


Operators:
-----------
Arithmetic operators +, -, *, /, %, ++, --
comparison operators ==, ===, !=, >, <, >=, <=
logical operators (relation operator) &&, ||, !
assignment operators =, +=, -=, *=, /=, %=, <<=, >>=, >>>=, &=, ^=, |=, **=
conditional operators (ternary) ? :
string operators +   "Jhon" + "Mohan"   JhonMohan
type operators   typeof, instanceof
bitwise operators  &, |, ~, ^, <<, >>, >>>


Control statement
----------------
conditions:
if else
switch

looping:
for loop
while loop
do while loop
for in loop

others:
break
continue

in javascript switch case can accept number, string or boolean value

inside switch input we can do some operation also Eg: switch(num + 2)



for loop
for(;;) - this is infinite loop. 


Functions:
---

function nameOfFunction()
{

}

funcation with paramter:
function add(a, b)
{

}

function with return type:
function add(a, b)
{
  var tot = a + b;
  return tot;
}



local & global variables:
variable created inside function is local variable. It can be used with in the function
variable created outside the function is global variable. It can used inside and outside the function




arrays:
--
var cars = ["bmw", "swift", "volvo"];
or
var cars = new Array("bmw", "swift", "volvo");



Object:
-


Dom manipulation:

onclick  



Debugging:
----

In developer tool:
Elements: will show the code of the web page and when hover it will high light
Console: It is used to print console log. we can also use for some operation
Source: It is for deugging. Eg: we can add some debug point and go step by step

console.log("give logging string here");  //This is log in console

if there is some issue or error it will show in console
It will throw the exception in console


timing functions:
---------------
setTimeout() - used to execute function or statement after certain delay
clearTimeout() - used to stop setTimeout inbetween
setInterval() - used to execute statement or function repeatedly in given interval
cleanInterval() - used to stop setInterval inbetween
Above 4 functions are from windows



------------------------------------------------------

https://www.youtube.com/watch?v=PlbupGCBV6w&list=PLsyeobzWxl7rrvgG7MLNIMSTzVCDZZcT4

JAVASCRIPT TUTORIAL
------------------
------------------

node --version       //To check node version or to check whether node is installed or not

node filename.js      //To run javascript file


Install node js 
node --version   //to check whether noderr is installed or not

If node go to browser and type "noder js download"

then install

After installing giving below command to check again

node --version


To run javascript file give below command:
node filename.js


For IDE use vscode
if not available download and use visual code



Variable:
--------

let num = 3   //let is the keyword used to declare variable. This is the new practise in javascript. So lets follow that

We can directly declare any datatype for the variable
String value should be inside single quote or double quote
Variable value can change. We can change the value inbetween 
variable name can have alphabet, numbers or $ or _



Constants:
----------

const is the keyword used to declare constant variable
The value of constant variable cannot change


Datatype:
1. Primitive datatypes
2. Objects

Primitive:
1. number
2. String
3. Boolean
4. Null
5. Undefined
6. Symbol


let hexDecNum = 0xf
let oneLakh = 1_00_0000
let bigInNumber = 10367846237867826n   //n at the end



type conversion
--------------

let num = String(6)        //String(value) - this method is to convert to string
let str = Number("1234")   //Number(value) - this method is to convert to number


Type coversion
--------------


arithmetic operator

relational operator





comparsion:

IMPORTANT::
In javascript always use === for comparision operator. === will compare values and datatype. but == will compare only value. not datatype
7 == 7        => true
"7" == 7      => true
 "7" === 7    => false

javascript will ignore if there is comma(?) in last property of object

we can use ? to check go forward only if the object/property is available

? - very important

delete key word is used to delete object or property inside object
Eg: delete student.age



We can iterate each element in object


function functionName()
{

}


function funationName(param1, param2)
{
	return "hellow world";
}




function expression
-------

let add = function(num1, num2)
    {
        return num1 + num2;
    }

let sum = add; //Assiging function to new function sum


global variable:
-------
variable created outside function is called as global variable.
We can use this variable inside and outside of the function

local variable:
------
Variable created inside the function is called local variable
We cannot use local variable outside that function. we can use only inside that function



Arrow functions // Here instead of function keyword we will use () followed by arrow => //No other difference
--------------

let add = (num1, num2) =>
    {
        return num1 + num2;
    }


If arrow function has only one line and that one line is return, then we can also write in one line
let add = (num1, num2) => num1 + num2



Methods or Functions
--------------------

let student = {
    name: 'Ram',
    age: 26,
    mark: 89,

    display: function() {                    //method or function
        console.log("Hello man")
    }

}

student.display()               //calling the function


this keyword
------------


let student = {
    name: 'Ram',
    age: 26,
    mark: 89,

    display: function() {                    
        console.log(this.name)
    }

}

student.display()   

--

constructor function
-------------------

constructor function starts with upper case

Constructor function will return the object. So dont secify any return statement. even if we give return type, it wont work.

Eg:

function Student(name, age) {         //This is constructor function. function name start with upper case
    this.name = name
    this.age = age
    this.display = function(){
        console.log("hi hello")
    }
}

st1 = new Student("Ram", 28) //constructor function will be called along with new keyword
st2 = new Student("Dom", 34)

st1.display()
console.log(st1)
console.log(st2)


----


Array
---

let values = new Array(); //to create empty array

or 

let values =[];        //to create empty array

let values = [3, 5, 9]        //to create array with set of values

values.length      //This will fetch length of the array

values.push(5) //This will add new element to the array

values[0]    //Using index we can fetch particular values in the array


We can have array of different datatype

Eg:
let values = [3, 5, 9, "hi", "hello", "man", 5.6] 

We can also have any object of function in an array
let myarr = [3, 2, 'hello', 4.5, { name: 'ram'}, "This", function(){console.log("heeee")} ];



Eg:

let myarr = [3, 2, 'hello', 4.5, { name: 'ram'}, "This", function(){console.log("heeee")} ];
console.log(myarr)
myarr[7] = "newda"; //we can add new value  by giving index also
console.log(myarr)
console.log(myarr[4].name) //to call the param inside 
myarr[6]()      //to call function in the array

--


Methods in array:

push //to add new element in last
pop //to remove element in last
shift // to remove element in begining
unshift //to add new element in beginning
splice(index) //to remove all element from index
splice(index, length) //to remove element from index to length
splice(index, length, newelem) //to remove element from index to length and then add new element

---


for of loop:

let arr = []
console.log(arr)
console.log("size of array is:" + arr.length)
arr[0] = 23
arr[57] = 43 //created array upto 57th index and assigned 57th index value as 43
console.log(arr)
console.log("size of array is:" + arr.length)
for(let n of arr){ //for of will assign each value for every iteration
    console.log("each value is:" + n)
}

for(let key in arr) { // for in will assign each key for every iteration. Here key is index. also this will ignore undefined one
    console.log("each key is:" + key)
    console.log(arr[key])
}


---

